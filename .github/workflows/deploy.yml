name: deploy

on:
  workflow_call:
  workflow_dispatch:

jobs:
  release:
    concurrency:
      group: deploy
    runs-on: ubuntu-latest
    permissions:
      contents: write         # Required for pushing tags
      pull-requests: write    # Required for creating/updating PRs
      issues: write           # Required for creating issues
      actions: read           # Required for workflow operations
      checks: write           # Required for status checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fetch all history for semantic-release

      - name: Get All Tags
        run: git fetch --tags -f

      - name: Get Python Version
        id: get-python-version
        run: echo version=$(python setup.py get_minimum_python_version | tail -n 1) >> $GITHUB_OUTPUT

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ steps.get-python-version.outputs.version }}

      - name: Restore Python dependencies
        run: pip install -r requirements-dev.txt

      - name: Change default logging level
        run: sed -i -e 's/DEBUG/WARN/g' sfake/__init__.py

      - name: Get Node Version
        id: get-node-version
        run: echo version=$(jq -r .engines.node package.json) >> $GITHUB_OUTPUT

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.get-node-version.outputs.version }}

      - name: Release
        run: |
          npm install
          npx semantic-release
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
          # Usa il tuo secret personale o quello predefinito
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }} # oppure secrets.GITHUB_TOKEN
          RELEASE_DRY_RUN: ${{ contains(github.repository, 'template') }}

